resources:
  repositories:
  - repository: templates
    type: git
    name: azure-pipeline-templates
    ref: refs/heads/master

trigger:
  branches:
    include: [ master ]

jobs:
- template: job-templates/semver.yml@templates
- job: deploy
  displayName: nuget deploy
  dependsOn:
  - semver
  pool:
    vmImage: windows-latest

  steps:

  - template: semver-set-env.yml@templates

  - powershell: |
      $v = "$($env:GITVERSION_SEMVER)-alpha-$($env:GITVERSION_BUILDMETADATA)"
      "##vso[task.setvariable variable=NUGET_VERSION;]$v"
    condition: and(succeeded(), ne(variables['GITVERSION_BuildMetaData'], '0'))
    displayName: set param nuget version (for alpha build)
    
  - powershell: |
      $v = "$($env:GITVERSION_SEMVER)"
      "##vso[task.setvariable variable=NUGET_VERSION;]$v"
    condition: and(succeeded(), eq(variables['GITVERSION_BuildMetaData'], '0'))
    displayName: set param nuget version (for release)    

  - task: PowerShell@2
    inputs:
      filePath: 'cf-api.Tests.ps1'
      pwsh: true

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'NUnit'
      testResultsFiles: '**/TEST-*.xml'
      failTaskOnFailedTests: true

  - task: MarkLindell.h2hextension.envsubst.envsubst@1
    inputs:
      Contents: |
        *.nuspec
        *.psd1
    displayName: 'fix versions in files'

  - task: NuGetCommand@2
    inputs:
      command: pack
      packagesToPack: '*.nuspec'
    displayName: 'Nuget pack'

  - task: NuGetCommand@2
    inputs:
      command: push
      nuGetFeedType: external
      publishFeedCredentials: nuget.org
    displayName: 'NuGet push' 

  - task: NuGetCommand@2
    displayName: 'Download cf-api module  nuget source'
    inputs:
      command: custom
      arguments: 'install cf-api -Version 2.0.0 -OutputDirectory $(Agent.ToolsDirectory)'

  - task: CopyFiles@2
    displayName: 'copy module from specific version to $(Agent.ToolsDirectory)'
    inputs:
      SourceFolder: '$(Agent.ToolsDirectory)/cf-api.2.0.0'
      Contents: '**/*'
      TargetFolder: '$(Agent.ToolsDirectory)/cf-api/'

  - task: PowerShell@2
    inputs:
      filePath: test-publish-unpublish.ps1
      workingDirectory: integration-tests
      arguments: -orgname $(CF_ORG) -username $(CF_USERNAME) -password $(CF_PASSWORD) -api $(CF_API)
      pwsh: true